@import 'mixins.scss';

.root {
  display: flex;
  align-items: stretch;
  height: 100%;

  --toggle-height: 1.2em;
  --toggle-width: calc(var(--toggle-height) * 2.1);
  --knob-size: calc(var(--toggle-height) - 2px);

  input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
  }

  .label {
    align-self: stretch;
    flex-grow: 1;
    display: flex;
    align-items: center;

    .children {
      @include truncate-flex-child();
      flex-grow: 1;
    }

    .switch {
      position: relative;
      align-self: flex-end;
      flex-grow: 0;
      flex-shrink: 0;
      width: var(--toggle-width);
      height: var(--toggle-height);

      &::before {
        content: '';
        position: absolute;
        left: 0;
        top: 1px;
        width: var(--toggle-width);
        height: calc(var(--toggle-height) - 3px);
        border: 1px solid var(--color-border);
        background: var(--color-toggle-off-background);
        border-radius: var(--toggle-height);
      }

      &::after {
        box-shadow: 0px 0px 1px var(--color-shadow);
        position: absolute;
        left: 1px;
        transition-property: transform, background-color;
        transition-duration: 0.1s;
        transition-timing-function: ease-in-out;
        content: '';
        background: var(--color-toggle-off-knob);
        border-radius: 50%;
        height: var(--knob-size);
        width: var(--knob-size);
      }
    }
  }

  input:not(:checked) ~ .switch::after {
    transform: translateX(0%);
  }

  input:checked ~ .switch {
    &::before {
      background: var(--color-toggle-on-background);
    }

    &::after {
      transform: translateX(130%);
      left: 0;
      background: var(--color-toggle-on-knob);
    }
  }
}
