@import 'mixins.scss';

.root {
  display: flex;

  button {
    align-self: stretch;
    flex-grow: 1;
    display: flex;
    align-items: center;
    cursor: inherit;
    padding: 0;
    color: inherit;
    background: transparent;
    font-size: inherit;
    text-align: inherit;
  }

  .label {
    flex-grow: 1;
    cursor: inherit;
    @include truncate-flex-child();
  }

  --toggle-height: 1.15em;
  --toggle-width: calc(var(--toggle-height) * 2.1);
  --knob-size: calc(var(--toggle-height) - 0.1em);

  .switch {
    position: relative;
    align-self: flex-end;
    flex-grow: 0;
    flex-shrink: 0;
    height: var(--toggle-height);
    width: var(--toggle-width);
    padding: 3px;

    &::before {
      $slider-diff: 0.3em;

      content: '';
      position: absolute;
      left: $slider-diff / 2;
      top: $slider-diff / 2;
      width: calc(var(--toggle-width) - #{$slider-diff});
      height: calc(var(--knob-size) - #{$slider-diff});
      background: var(--color-toggle-off-background);
      border-radius: var(--toggle-height);
    }

    &::after {
      $shadow-size: 0.1em;

      box-shadow: 0px 0px $shadow-size var(--color-shadow);
      position: absolute;
      top: $shadow-size / 2;
      left: $shadow-size / 2;
      transition-property: transform, background-color;
      transition-duration: 0.1s;
      transition-timing-function: ease-in-out;
      content: '';
      background: var(--color-toggle-off-knob);
      border-radius: 50%;
      height: calc(var(--knob-size) - #{$shadow-size});
      width: calc(var(--knob-size) - #{$shadow-size});
    }
  }

  button:not([aria-checked='true']) .switch::after {
    transform: translateX(0%);
  }

  button[aria-checked='true'] .switch {
    &::before {
      background: var(--color-toggle-on-background);
    }

    &::after {
      transform: translateX(135%);
      background: var(--color-toggle-on-knob);
    }
  }
}
